; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.data
	.align 2
LC0:
	.ascii "Process #\000"
	.align 2
LC1:
	.ascii "Running process %d (iteration %d)!\n\000"
.text
	.align 2
.proc _doSomething
_doSomething:
;  Function 'doSomething'; 96 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#120	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	addi	r3,r0,#10
	movi2fp	f0,r1
	movi2fp	f1,r3
	div	f0,f0,f1
	movfp2i	r2,f0
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x1
	sub	r1,r1,r2
	sw	-20(r30),r1
	lw	r1,(r30)
	slei	r2,r1,#99
	beqz	r2,L13
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_mysems)>>16)&0xffff
	addui	r3,r3,(_mysems)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	addi	r2,r0,#1
	sw	4(r1),r2
	jal	_SemInit
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	sw	-12(r30),r1
L14:
	lw	r1,-12(r30)
	slei	r2,r1,#6
	bnez	r2,L17
	nop	; delay slot nop
	j	L13
	nop	; delay slot nop
L17:
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r30,#-64
	sw	(r1),r2
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	4(r1),r2
	jal	_dstrcpy
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	addi	r2,r30,#-104
	sw	4(r1),r2
	jal	_ditoa
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r30,#-64
	sw	(r1),r2
	addi	r2,r30,#-104
	sw	4(r1),r2
	jal	_dstrcat
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((_doSomething)>>16)&0xffff
	addui	r2,r2,(_doSomething)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	lw	r3,(r30)
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r4,r0,r2
	slli	r3,r4,#0x5
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	lw	r3,(r30)
	add	r2,r2,r3
	sw	4(r1),r2
	addi	r2,r30,#-64
	sw	8(r1),r2
	addi	r2,r0,#0
	sw	12(r1),r2
	jal	_ProcessFork
	nop	; delay slot nop
	addi	r29,r29,#16
L16:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L14
	nop	; delay slot nop
L15:
L13:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_mysems)>>16)&0xffff
	addui	r3,r3,(_mysems)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_SemWait
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	sw	-12(r30),r1
	addi	r1,r0,#0
	sw	-16(r30),r1
L18:
	lw	r1,(r30)
	add	r2,r0,r1
	slli	r1,r2,#0x1
	lw	r2,-12(r30)
	slt	r1,r2,r1
	bnez	r1,L21
	nop	; delay slot nop
	j	L19
	nop	; delay slot nop
L21:
	lw	r1,-12(r30)
	addi	r3,r0,#1000
	movi2fp	f0,r1
	movi2fp	f1,r3
	div	f0,f0,f1
	movfp2i	r2,f0
	add	r4,r0,r2
	slli	r3,r4,#0x5
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	sub	r1,r1,r2
	snei	r2,r1,#0
	bnez	r2,L22
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	sw	4(r1),r2
	lw	r2,-12(r30)
	sw	8(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L22:
	lw	r2,-12(r30)
	andi	r1,r2,#3
	lw	r2,-16(r30)
	add	r1,r2,r1
	sw	-16(r30),r1
L20:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L18
	nop	; delay slot nop
L19:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_mysems)>>16)&0xffff
	addui	r3,r3,(_mysems)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_SemSignal
	nop	; delay slot nop
	addi	r29,r29,#8
L12:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _doSomething
.data
	.align 2
LC2:
	.ascii "chasetail\000"
	.align 2
LC3:
	.ascii "Chasing tail %d.\n\000"
	.align 2
LC4:
	.ascii "Open of (%s,0x%x) returns 0x%x.\n\000"
	.align 2
LC5:
	.ascii "ChaseTail\000"
.text
	.align 2
.proc _chaseTail
_chaseTail:
;  Function 'chaseTail'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lhi	r1,((LC2)>>16)&0xffff
	addui	r1,r1,(LC2)&0xffff
	sw	-12(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	lw	r2,(r30)
	addi	r3,r2,#8192
	sw	4(r1),r3
	jal	_Open
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-16
	add	r2,r0,r29
	lhi	r3,((LC4)>>16)&0xffff
	addui	r3,r3,(LC4)&0xffff
	sw	(r2),r3
	lw	r3,-12(r30)
	sw	4(r2),r3
	lw	r3,(r30)
	addi	r4,r3,#8192
	sw	8(r2),r4
	sw	12(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	lw	r1,(r30)
	slei	r2,r1,#39
	beqz	r2,L24
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((_chaseTail)>>16)&0xffff
	addui	r2,r2,(_chaseTail)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	addi	r3,r2,#1
	sw	4(r1),r3
	lhi	r2,((LC5)>>16)&0xffff
	addui	r2,r2,(LC5)&0xffff
	sw	8(r1),r2
	addi	r2,r0,#0
	sw	12(r1),r2
	jal	_ProcessFork
	nop	; delay slot nop
	addi	r29,r29,#16
L24:
L23:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _chaseTail
	.align 2
.proc _SysprocCreateProcesses
.global _SysprocCreateProcesses
_SysprocCreateProcesses:
;  Function 'SysprocCreateProcesses'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L26:
	lw	r1,-12(r30)
	slei	r2,r1,#9
	bnez	r2,L29
	nop	; delay slot nop
	j	L27
	nop	; delay slot nop
L29:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lhi	r3,((_mysems)>>16)&0xffff
	addui	r3,r3,(_mysems)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	addi	r2,r0,#1
	sw	4(r1),r2
	jal	_SemInit
	nop	; delay slot nop
	addi	r29,r29,#8
L28:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L26
	nop	; delay slot nop
L27:
L25:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SysprocCreateProcesses
.data
	.align 2
_mysems:
	.space 200
